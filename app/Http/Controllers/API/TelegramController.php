<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Models\Application;
use App\Models\Clients;
use Illuminate\Http\Request;
use PhpParser\Builder\TraitUse;
use Telegram\Bot\Laravel\Facades\Telegram;
use Telegram\Bot\Keyboard\Keyboard;
use App\Telegram\Commands\StartCommand;
use Illuminate\Support\Facades\Log;
use App\Telegram\BaseKeyboard;
use App\Models\TelegramRequestLog;
use App\Models\News;
use App\Models\NewsReactions;

class TelegramController extends Controller
{
    public function start(Request $request)
    {
        $telegramId = $request->telegram_id;
        $telegramUsername = $request->user_name;
        return StartCommand::excuteCommand($telegramId, $telegramUsername);
    }

    public function message(Request $request)
    {
        try {
            $telegramRequestLog = TelegramRequestLog::query()->where('telegramId', $request->telegram_id)->first();

            if ($request->message === 'üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é' || $request->message === 'üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ') {
                return $this->start($request);
            }

            if ($telegramRequestLog->command) {
                if ($telegramRequestLog->command === 'chooseLanguage') {

                    $inlineKeyboard = BaseKeyboard::getTopicKeyboardByLanguage($request->message, json_decode($telegramRequestLog->json_data, true)['language']);

                    if (!$inlineKeyboard) {
                        if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                            $keyboard = BaseKeyboard::getServiceKeyboardByLanguage('ru');
                            $text = '–ü–æ–∫–∞ —ç—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—É—Å—Ç–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:';
                        } else {
                            $keyboard = BaseKeyboard::getServiceKeyboardByLanguage('kz');
                            $text = '”ò–∑—ñ—Ä–≥–µ –±“±–ª —Å–∞–Ω–∞—Ç –±–æ—Å, –±–∞—Å“õ–∞ —Å–∞–Ω–∞—Ç—Ç—ã —Ç–∞“£–¥–∞—É—ã“£—ã–∑–¥—ã ”©—Ç—ñ–Ω–µ–º—ñ–Ω';
                        }
                        return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                    }

                    if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                        $text = '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ‚¨áÔ∏è';
                    } else {
                        $text = '–°—ñ–∑–≥–µ –∫–µ—Ä–µ–∫ —Å–∞–Ω–∞—Ç—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑: ‚¨áÔ∏è';
                    }

                    $json_data = json_decode($telegramRequestLog->json_data, true);
                    $json_data['category'] = $request->message;


                    $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'chooseLanguage');
                    return $this->sendInlineMessage($text, $inlineKeyboard, $request->telegram_id);
                } elseif ($telegramRequestLog->command === 'final') {
                    if (!array_key_exists('description', json_decode($telegramRequestLog->json_data, true))) {
                        if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                            $text = 'üë§ –í–∞—à–µ –∏–º—è:';
                            $keyboard = [['üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é']];
                        } else {
                            $text = 'üë§ –°—ñ–∑–¥—ñ“£ –∞—Ç—ã“£—ã–∑:';
                            $keyboard = [['üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ']];
                        }
                        $json_data = json_decode($telegramRequestLog->json_data, true);
                        $json_data['description'] = $request->message;
                        $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'final');
                        return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                    } elseif (!array_key_exists('name', json_decode($telegramRequestLog->json_data, true))) {
                        if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                            $text = '–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –≤–∏–¥–µ: +7XXXXXXXXXX';
                            $keyboard = [['üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é']];
                        } else {
                            $text = '–ë–∞–π–ª–∞–Ω—ã—Å —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ“£—ñ–∑–¥—ñ –∫–µ–ª–µ—Å—ñ–¥–µ–π –∫”©—Ä—Å–µ—Ç—ñ“£—ñ–∑: +7XXXXXXXXXX';
                            $keyboard = [['üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ']];
                        }
                        $json_data = json_decode($telegramRequestLog->json_data, true);
                        $json_data['name'] = $request->message;
                        $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'final');
                        return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                    } elseif (!array_key_exists('phone', json_decode($telegramRequestLog->json_data, true))) {
                        if (!is_numeric(substr($request->message, 1)) || strlen($request->message) > 12 || strlen($request->message) < 11) {
                            if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                                $text = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:';
                                $keyboard = [['üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é']];
                            } else {
                                $text = '–î“±—Ä—ã—Å —Ç–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑:';
                                $keyboard = [['üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ']];
                            }
                            return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                        }

                        if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                            $text = '‚è≥ –î–µ–¥–ª–∞–π–Ω/–°—Ä–æ–∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è:';
                            $keyboard = [['üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é']];
                        } else {
                            $text = '‚è≥ –ú–µ—Ä–∑—ñ–º:';
                            $keyboard = [['üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ']];
                        }
                        $json_data = json_decode($telegramRequestLog->json_data, true);
                        $json_data['phone'] = $request->message;
                        $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'final');
                        return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                    } elseif (!array_key_exists('deadline', json_decode($telegramRequestLog->json_data, true))) {
                        if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                            $text = "–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ. ‚úÖ \n\n–ù–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂—É—Ç—Å—è —Å –í–∞–º–∏ üìû \n<b>–°—Ä–µ–¥–Ω–µ–µ –æ–∂–∏–¥–∞–Ω–∏–µ:</b> 10-25 –º–∏–Ω. \n\n‚ú®<b>FastKomek</b> –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –≤–∞–º –ø–æ–º–æ—á—å‚ú®";
                            $keyboard = [['üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é']];
                        } else {
                            $text = "–°—ñ–∑–¥—ñ“£ ”©—Ç—ñ–Ω—ñ—à—ñ“£—ñ–∑ —Å”ô—Ç—Ç—ñ –∂–∞—Å–∞–ª–¥—ã –∂”ô–Ω–µ ”©“£–¥–µ–ª—É–¥–µ. ‚úÖ \n\n–ë—ñ–∑–¥—ñ“£ “õ—ã–∑–º–µ—Ç–∫–µ—Ä–ª–µ—Ä –∂–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Å—ñ–∑–±–µ–Ω –º—ñ–Ω–¥–µ—Ç—Ç—ñ —Ç“Ø—Ä–¥–µ –±–∞–π–ª–∞–Ω—ã—Å–∞–¥—ã üìû \n<b>–û—Ä—Ç–∞—à–∞ –∫“Ø—Ç—É —É–∞“õ—ã—Ç—ã:</b> 10-25 –º–∏–Ω. \n\n‚ú®<b>FastKomek</b> —Å—ñ–∑–≥–µ ”ô—Ä“õ–∞—à–∞–Ω –∫”©–º–µ–∫—Ç–µ—Å—É–≥–µ –¥–∞–π—ã–Ω‚ú®";
                            $keyboard = [['üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ']];
                        }
                        $json_data = json_decode($telegramRequestLog->json_data, true);
                        $json_data['deadline'] = $request->message;
                        $client = Clients::query()->updateOrCreate(
                            ['telegramId' => $request->telegram_id],
                            [
                                'telegramId' => $request->telegram_id,
                                'name' => json_decode($telegramRequestLog->json_data, true)['name'],
                                'phone' => json_decode($telegramRequestLog->json_data, true)['phone'],
                                'telegramUsername' => $telegramRequestLog->telegramUsername,
                            ]
                        );
                        $application = Application::query()->create([
                            'client_id' => $client['id'],
                            'language' => json_decode($telegramRequestLog->json_data, true)['language'] === 'ru' ? '–ù–∞ —Ä—É—Å—Å–∫–æ–º' : "“ö–∞–∑–∞“õ—à–∞",
                            'category' => json_decode($telegramRequestLog->json_data, true)['category'],
                            'topic' => json_decode($telegramRequestLog->json_data, true)['topic'],
                            'subTopic' => json_decode($telegramRequestLog->json_data, true)['programmingLanguage'] ?? "",
                            'description' => json_decode($telegramRequestLog->json_data, true)['description'],
                            'deadline' => $request->message,
                            'status' => true
                        ]);
                        $this->telegramRequestLogUpdate($request->telegram_id, ['language' => json_decode($telegramRequestLog->json_data, true)['language']], 'chooseLanguage');
                        $this->sendMessage($text, $request->telegram_id);
                        #      1618342840 , 513443978
                        $text = "\n\n–ó–∞—è–≤–∫–∞ ‚Ññ $application->id " .
                            "\n\n–ò–º—è: " . $client['name'] .
                            "\n–ù–æ–º–µ—Ä: " . $client['phone'] .
                            "\n–ê–∫–∫–∞—É–Ω—Ç: https://t.me/" . $client['telegramUsername'] .
                            "\n–Ø–∑—ã–∫: $application->language " .
                            "\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: $application->category" .
                            "\n–¢–µ–º–∞: $application->topic" .
                            "\n–ü–æ–¥—Ç–µ–º–∞: $application->subTopic" .
                            "\n–û–ø–∏—Å–∞–Ω–∏–µ: $application->description" .
                            "\n–î–µ–¥–ª–∞–π–Ω: $application->deadline" .
                            "\n–°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–∞—è" .
                            "\n–î–∞—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è: $application->created_at";
                        return $this->sendButtonMessage($text, $keyboard, 513443978);
                    }
                }
            } else {
                if ($request->message === "–ù–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ üá∑üá∫") {
                    $keyboard = BaseKeyboard::getServiceKeyboardByLanguage('ru');
                    $text = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: ‚¨áÔ∏è";
                    $json_data = json_decode($telegramRequestLog->json_data, true);
                    $json_data['language'] = 'ru';
                    $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'chooseLanguage');
                    return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                } elseif ($request->message === "“ö–∞–∑–∞“õ —Ç—ñ–ª—ñ–Ω–¥–µ üá∞üáø") {
                    $keyboard = BaseKeyboard::getServiceKeyboardByLanguage('kz');
                    $text = "–ö–µ—Ä–µ–∫ –Ω“±—Å“õ–∞–Ω—ã —Ç–∞“£–¥–∞“£—ã–∑: ‚¨áÔ∏è";
                    $json_data = json_decode($telegramRequestLog->json_data, true);
                    $json_data['language'] = 'kz';
                    $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'chooseLanguage');
                    return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                }
                return true;
            }
            return true;
        } catch (\Exception $e) {
            Log::channel('telegram')->debug('TelegramController_Message: ' . $e->getMessage());
        }
    }


    public function callback(Request $request)
    {
        try {
            $telegramRequestLog = TelegramRequestLog::query()->where('telegramId', $request->telegram_id)->first();
            if ($telegramRequestLog->command === 'chooseLanguage') {
                if ($request->callback === '–ü–æ–º–æ—â—å –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é' || $request->callback === '–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª–∞—É –±–æ–π—ã–Ω—à–∞ –∫”©–º–µ–∫') {
                    $inlineKeyboard = BaseKeyboard::getProgrammingLanguage();
                    if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                        $text = '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã: ‚¨áÔ∏è';
                    } else {
                        $text = '–°“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑ –±–∞—Ä –±–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª–∞—É —Ç—ñ–ª—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑: ‚¨áÔ∏è';
                    }
                    $json_data = json_decode($telegramRequestLog->json_data, true);
                    $json_data['topic'] = $request->callback;
                    $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'chooseProgrammingLanguage');
                    return $this->sendInlineMessage($text, $inlineKeyboard, $request->telegram_id);
                } else {

                    $json_data = json_decode($telegramRequestLog->json_data, true);
                    $json_data['topic'] = $request->callback;

                    $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'final');
                    if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                        $text = '–ü–æ–ª–µ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–∏ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏:';
                        $keyboard = [['üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é']];
                    } else {
                        $text = '–°—ñ–∑–¥—ñ“£ ”©—Ç—ñ–Ω—ñ—à—ñ“£—ñ–∑–¥—ñ“£ —Å–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã:';
                        $keyboard = [['üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ']];
                    }
                    return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
                }
            } elseif ($telegramRequestLog->command === 'chooseProgrammingLanguage') {
                $json_data = json_decode($telegramRequestLog->json_data, true);
                $json_data['programmingLanguage'] = $request->callback;

                $this->telegramRequestLogUpdate($request->telegram_id, $json_data, 'final');

                if (json_decode($telegramRequestLog->json_data, true)['language'] === 'ru') {
                    $text = '–ü–æ–ª–µ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–ø–∏—Å–∞–Ω–∏–∏ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏:';
                    $keyboard = [['üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é']];
                } else {
                    $text = '–°—ñ–∑–¥—ñ“£ ”©—Ç—ñ–Ω—ñ—à—ñ“£—ñ–∑–¥—ñ“£ —Å–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã:';
                    $keyboard = [['üîô –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ']];
                }
                return $this->sendButtonMessage($text, $keyboard, $request->telegram_id);
            } else {
                $pieces = explode("#poll", $request->callback);
                $newsList = News::where('id', $pieces[1])->get();
                foreach ($newsList as $news) {
                    $existingReaction = NewsReactions::where('telegramId', $request->telegram_id)
                        ->where('news_id', $news->id)
                        ->where('reaction', $pieces[0])
                        ->first();
                    if (!$existingReaction) {
                        $news_reactions = new NewsReactions();
                        $news_reactions->reaction = $pieces[0];
                        $news_reactions->telegramId = $request->telegram_id;
                        $news_reactions->news_id = $news->id;
                        $news_reactions->save();
                        return $this->sendMessage('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É', $request->telegram_id);
                    }
                }
                return true;
            }
        } catch (\Exception $e) {
            Log::channel('telegram')->debug('TelegramController_Callback: ' . $e->getMessage());
        }
    }
    protected function sendButtonMessage($text, $keyboard, $telegramId)
    {
        $reply_markup = Keyboard::make(['keyboard' => $keyboard, 'resize_keyboard' => true, 'one_time_keyboard' => true]);
        return Telegram::sendMessage([
            'chat_id' => $telegramId,
            'text' => $text,
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }

    protected function sendInlineMessage($text, $keyboard, $telegramId)
    {
        $reply_markup = Keyboard::make(['inline_keyboard' => $keyboard, 'resize_keyboard' => true, 'one_time_keyboard' => true]);
        return Telegram::sendMessage([
            'chat_id' => $telegramId,
            'text' => $text,
            'reply_markup' => $reply_markup,
            'parse_mode' => 'HTML'
        ]);
    }

    protected function sendMessage($text, $telegramId)
    {
        return Telegram::sendMessage([
            'chat_id' => $telegramId,
            'text' => $text,
            'parse_mode' => 'HTML'
        ]);
    }

    protected function telegramRequestLogUpdate($telegramId, $json_data, $command)
    {
        return TelegramRequestLog::query()->updateOrCreate(
            ['telegramId' => $telegramId],
            [
                'telegramId' => $telegramId,
                'json_data' => $json_data,
                'command' => $command
            ]
        );
    }
}